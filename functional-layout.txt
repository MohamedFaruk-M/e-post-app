GPRSClient

Constants

Thread
    -> await at the end point to post the message
    PostMan

Task
	-> establish connection, wrap message object,  send it to end consumer, receive the ack, close the connection
	DeliveryTask/DeliveryAction

Communication Medium (Protocol)
    GPRS


MessageEnvelope:
		meta-data
			message header
				contains the sender the receiver details - given by the user
			message footer
				seq no - generated by post office

Message
	-> 
		actual data
			message body
				contains the necessary informational data - given by the user
				
		tracking status
			status {
				ARRIVED, DISPATCHED, DELIVERED, RETURNED
			}
			
MessageBuilder
	->
		construct message header
			lookup sim number
		construct message body
			generate random informational details
		construct message footer
			increment the seq no
			
Deliverable
	-> marker interface (i.e; actual logic implemented in validation framework which validates the basic information like delivery address pincode [analogy to sim number.lenght == 19 || 20] before send)
		
Sender

Receiver

RTC
	getNowAsUnixHex
		provided the current time stamp in hex


MultiThreading
	Sender - PostOffice
		Once the sender post the messsage to the post office 
		(s)he'll get the identity number which will be used to track the delivery status.
		
	PostOffice - PostMan
		Dispatcher
			On a specific time It bundles and distributes all the available message to the concerned PostMans region wise.
			
	PostMan
		already described in above
		
	PostOffice - Sender
		TrackingSystem
			Upon the status transition, user will get notified.
			
	
